library ieee;
use ieee.std_logic_1164.all;
library grlib;
use grlib.amba.all;
use grlib.stdlib.all;
use grlib.devices.all;
library gaisler;
use gaisler.misc.all;
library UNISIM;
use UNISIM.VComponents.all;

entity AHB_bridge is
  port(
    clkm : in std_logic;
    rstn : in std_logic;
    ahbmi : in ahb_mst_in_type;
    ahbmo : out ahb_mst_out_type;
    HADDR : in std_logic_vector (31 downto 0);
    HSIZE : in std_logic_vector (2 downto 0);
    HTRANS : in std_logic_vector (1 downto 0);
    HWDATA : in std_logic_vector (31 downto 0);
    HWRITE : in std_logic;
    HRDATA : out std_logic_vector (31 downto 0);
    HREADY : out std_logic
  );
end;

architecture structural of AHB_bridge is
  
  signal dmao : ahb_dma_out_type;
  signal dmai : ahb_dma_in_type;
  
  component state_machine is
    port(
      clkm : in std_logic;
      rstn : in std_logic;
      
      dmai : out ahb_dma_in_type;
      dmao : in ahb_dma_out_type;
    
      HADDR : in std_logic_vector (31 downto 0);
      HSIZE : in std_logic_vector (2 downto 0);
      HTRANS : in std_logic_vector (1 downto 0);
      HWDATA : in std_logic_vector (31 downto 0);
      HWRITE : in std_logic; -- AHB write control
      HREADY : out std_logic -- AHB stall signal
    );
  end component;
    
  component ahbmst is
    port(
      rst  : in  std_ulogic;
      clk  : in  std_ulogic;
      dmai : in ahb_dma_in_type;
      dmao : out ahb_dma_out_type;
      ahbi : in  ahb_mst_in_type;
      ahbo : out ahb_mst_out_type 
    );
  end component;
  
  component data_swapper is
    port(
      HRDATA  : out std_logic_vector(31 downto 0);
      dmao    : in ahb_dma_out_type
    );
  end component;
    
begin
  
  mealy_machine : state_machine
  port map(
    clkm => clkm,
    rstn => rstn,
    dmai => dmai,
    dmao => dmao,
    HADDR => HADDR,
    HSIZE => HSIZE,
    HTRANS => HTRANS,
    HWDATA => HWDATA,
    HWRITE => HWRITE,
    HREADY => HREADY
  );
  
  master : ahbmst
  port map(
    rst => rstn,
    clk => clkm,
    dmai => dmai,
    dmao => dmao,
    ahbi => ahbmi,
    ahbo => ahbmo
  );
  
  swapper : data_swapper
  port map(
      HRDATA => HRDATA,
      dmao => dmao
  );
  
end structural;
